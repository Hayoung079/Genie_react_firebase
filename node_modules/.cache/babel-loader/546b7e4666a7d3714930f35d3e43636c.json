{"ast":null,"code":"import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport uuid from \"react-uuid\"; // Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBptMJhUc4gjRfOHNYhybCgfQO5YQLdP3E\",\n  authDomain: \"reactfirebase-30c10.firebaseapp.com\",\n  databaseURL: \"https://reactfirebase-30c10-default-rtdb.firebaseio.com\",\n  projectId: \"reactfirebase-30c10\",\n  storageBucket: \"reactfirebase-30c10.appspot.com\",\n  messagingSenderId: \"440103573360\",\n  appId: \"1:440103573360:web:715853e90fb1563a8a61b5\",\n  measurementId: \"G-S9BB5XF3JP\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // 1~ 1000 까지 랜덤숫자 생성 \n\nconst number = []; // 숫자를 넣어 중복을 확인할 배열\n\nlet ranNum = Math.floor(Math.random() * 10 + 1); //1~10까지 숫자\n\nconst random = () => {\n  for (let i = 0; i < number.length; i++) {\n    if (i === 0) {\n      number.push(ranNum);\n      console.log(number[i]); // window.sessionStorage.setItem(\"userId\", ranNum);\n    } else if (ranNum !== number[i]) {\n      number.push(ranNum);\n      console.log(number[i]); // window.sessionStorage.setItem(\"userId\", ranNum);\n    }\n  }\n};\n\nrandom(); //uuid 활용\n//window.sessionStorage.setItem(\"userId\", uuid());\n\nlet userId = window.sessionStorage.getItem(\"userId\"); // 데이터 쓰기\n\nconst CreateUser = (userName, userPhone) => {\n  const userListRef = firebase.database().ref('User');\n  const newUserRef = userListRef.child('User' + userId);\n  newUserRef.set({\n    // userId: JSON.parse(userId),\n    userName: userName,\n    userPhone: userPhone\n  });\n}; // 숫자 버튼 클릭시 업데이트\n\n\n_c = CreateUser;\n\nconst UpdateNum = num => {\n  firebase.database().ref('User').child('User' + userId).update({\n    count: num\n  });\n}; // 필요한 곳에서 사용할 수 있도록 내보내기\n\n\n_c2 = UpdateNum;\nexport { CreateUser, UpdateNum };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateUser\");\n$RefreshReg$(_c2, \"UpdateNum\");","map":{"version":3,"sources":["C:/Users/Genie/Desktop/Genie_react_firebase/src/Firebase.js"],"names":["firebase","uuid","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","number","ranNum","Math","floor","random","i","length","push","console","log","userId","window","sessionStorage","getItem","CreateUser","userName","userPhone","userListRef","database","ref","newUserRef","child","set","UpdateNum","num","update","count"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CAEA;AACA;;AACA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,qCAFO;AAGnBC,EAAAA,WAAW,EAAE,yDAHM;AAInBC,EAAAA,SAAS,EAAE,qBAJQ;AAKnBC,EAAAA,aAAa,EAAE,iCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB,C,CAUA;;AACAV,QAAQ,CAACW,aAAT,CAAuBT,cAAvB,E,CAEA;;AACA,MAAMU,MAAM,GAAG,EAAf,C,CAAmB;;AACnB,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAd,GAAiB,CAA5B,CAAb,C,CAA6C;;AAE7C,MAAMA,MAAM,GAAG,MAAM;AACnB,OAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACL,MAAM,CAACM,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,QAAGA,CAAC,KAAI,CAAR,EAAU;AACRL,MAAAA,MAAM,CAACO,IAAP,CAAYN,MAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACK,CAAD,CAAlB,EAFQ,CAGR;AACD,KAJD,MAIM,IAAGJ,MAAM,KAAKD,MAAM,CAACK,CAAD,CAApB,EAAwB;AAC5BL,MAAAA,MAAM,CAACO,IAAP,CAAYN,MAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACK,CAAD,CAAlB,EAF4B,CAG5B;AACD;AACF;AACF,CAZD;;AAcAD,MAAM,G,CAEN;AACA;;AAEA,IAAIM,MAAM,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,QAA9B,CAAb,C,CAEA;;AACA,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAC1C,QAAMC,WAAW,GAAG7B,QAAQ,CAAC8B,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,CAApB;AACA,QAAMC,UAAU,GAAGH,WAAW,CAACI,KAAZ,CAAkB,SAASX,MAA3B,CAAnB;AAEAU,EAAAA,UAAU,CAACE,GAAX,CAAe;AACb;AACAP,IAAAA,QAAQ,EAAEA,QAFG;AAGbC,IAAAA,SAAS,EAAEA;AAHE,GAAf;AAKD,CATD,C,CAYA;;;KAZMF,U;;AAaN,MAAMS,SAAS,GAAIC,GAAD,IAAS;AACzBpC,EAAAA,QAAQ,CAAC8B,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,EAAgCE,KAAhC,CAAsC,SAASX,MAA/C,EAAwDe,MAAxD,CAA+D;AAC/DC,IAAAA,KAAK,EAAEF;AADwD,GAA/D;AAGD,CAJD,C,CAQA;;;MARMD,S;AASN,SAAQT,UAAR,EAAoBS,SAApB","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport uuid from \"react-uuid\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBptMJhUc4gjRfOHNYhybCgfQO5YQLdP3E\",\r\n  authDomain: \"reactfirebase-30c10.firebaseapp.com\",\r\n  databaseURL: \"https://reactfirebase-30c10-default-rtdb.firebaseio.com\",\r\n  projectId: \"reactfirebase-30c10\",\r\n  storageBucket: \"reactfirebase-30c10.appspot.com\",\r\n  messagingSenderId: \"440103573360\",\r\n  appId: \"1:440103573360:web:715853e90fb1563a8a61b5\",\r\n  measurementId: \"G-S9BB5XF3JP\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// 1~ 1000 까지 랜덤숫자 생성 \r\nconst number = []; // 숫자를 넣어 중복을 확인할 배열\r\nlet ranNum = Math.floor(Math.random()*10+1); //1~10까지 숫자\r\n\r\nconst random = () => {\r\n  for(let i =0; i<number.length; i++) {\r\n    if(i ===0){\r\n      number.push(ranNum);\r\n      console.log(number[i]);\r\n      // window.sessionStorage.setItem(\"userId\", ranNum);\r\n    }else if(ranNum !== number[i]){\r\n      number.push(ranNum);\r\n      console.log(number[i]);\r\n      // window.sessionStorage.setItem(\"userId\", ranNum);\r\n    }\r\n  }\r\n}\r\n\r\nrandom();\r\n\r\n//uuid 활용\r\n//window.sessionStorage.setItem(\"userId\", uuid());\r\n\r\nlet userId = window.sessionStorage.getItem(\"userId\")\r\n\r\n// 데이터 쓰기\r\nconst CreateUser = (userName, userPhone) => {\r\n  const userListRef = firebase.database().ref('User');\r\n  const newUserRef = userListRef.child('User' + userId);\r\n  \r\n  newUserRef.set({\r\n    // userId: JSON.parse(userId),\r\n    userName: userName,\r\n    userPhone: userPhone\r\n  });\r\n}\r\n\r\n\r\n// 숫자 버튼 클릭시 업데이트\r\nconst UpdateNum = (num) => {\r\n  firebase.database().ref('User').child('User' + userId ).update({\r\n  count: num\r\n  });\r\n}\r\n\r\n\r\n\r\n// 필요한 곳에서 사용할 수 있도록 내보내기\r\nexport {CreateUser, UpdateNum};\r\n"]},"metadata":{},"sourceType":"module"}