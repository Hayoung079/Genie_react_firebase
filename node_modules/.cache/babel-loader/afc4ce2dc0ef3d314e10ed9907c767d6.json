{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Genie\\\\Desktop\\\\reactProject\\\\Genie_react_firebase\\\\src\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { CreateUser, ReadUser } from './Firebase';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  _s();\n\n  // name, phone useState선언\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState(''); // 이름 저장 함수\n\n  const changeName = e => {\n    setName(e.target.value);\n  }; // 폰번호 저장 함수\n\n\n  const changePhone = e => {\n    const regex = /^\\d\\d\\d/; //숫자만 허용\n\n    if (regex.test(e.target.value)) {\n      setPhone(e.target.value);\n    }\n  }; // db와 같은 회원정보는 제출버튼 비활성화\n\n\n  const [disabled, setDisabled] = useState(false); // submit 함수 \n\n  const handleSubmit = e => {\n    e.preventDefault(); // 새로고침 안 되도록\n\n    CreateUser(name, phone); // 파이어베이스에 저장\n\n    ReadUser(); // user의 하위노드에 있는  userName, userPhone을 찾아서 동일한 값이 있으면 \n    // 제출버튼이 비활성화되게 하고 싶음....\n    // if(name === name || phone === phone){\n    //     setDisabled(true);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"lXOHpo3Z9XkubDvZhwWx6Wkj+G0=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/Genie/Desktop/reactProject/Genie_react_firebase/src/User.js"],"names":["React","useState","CreateUser","ReadUser","User","name","setName","phone","setPhone","changeName","e","target","value","changePhone","regex","test","disabled","setDisabled","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAoC,YAApC;AACA,OAAO,WAAP;;;AAEA,MAAMC,IAAI,GAAE,MAAM;AAAA;;AAEd;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAE,EAAF,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAE,EAAF,CAAlC,CAJc,CAOd;;AACA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACtBJ,IAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD,CARc,CAYd;;;AACA,QAAMC,WAAW,GAAIH,CAAD,IAAO;AACvB,UAAMI,KAAK,GAAG,SAAd,CADuB,CACE;;AACzB,QAAIA,KAAK,CAACC,IAAN,CAAWL,CAAC,CAACC,MAAF,CAASC,KAApB,CAAJ,EAAgC;AAC5BJ,MAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH;AACJ,GALD,CAbc,CAoBd;;;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC,CArBc,CAuBd;;AACA,QAAMiB,YAAY,GAAIR,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACS,cAAF,GADwB,CACJ;;AACpBjB,IAAAA,UAAU,CAACG,IAAD,EAAOE,KAAP,CAAV,CAFwB,CAEC;;AACzBJ,IAAAA,QAAQ,GAHgB,CAIxB;AACA;AACA;AACA;AACA;AACH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA7CD;;GAAMC,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { CreateUser, ReadUser} from './Firebase';\r\nimport './App.css';\r\n\r\nconst User =() => {\r\n\r\n    // name, phone useState선언\r\n    const [name, setName] = useState ('');\r\n    const [phone, setPhone] = useState ('');\r\n\r\n\r\n    // 이름 저장 함수\r\n    const changeName = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    // 폰번호 저장 함수\r\n    const changePhone = (e) => {\r\n        const regex = /^\\d\\d\\d/; //숫자만 허용\r\n        if (regex.test(e.target.value)) { \r\n            setPhone(e.target.value);\r\n        }\r\n    }    \r\n\r\n    // db와 같은 회원정보는 제출버튼 비활성화\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    // submit 함수 \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // 새로고침 안 되도록\r\n        CreateUser(name, phone); // 파이어베이스에 저장\r\n        ReadUser();\r\n        // user의 하위노드에 있는  userName, userPhone을 찾아서 동일한 값이 있으면 \r\n        // 제출버튼이 비활성화되게 하고 싶음....\r\n        // if(name === name || phone === phone){\r\n        //     setDisabled(true);\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/* <form onSubmit={handleSubmit}>\r\n                    <p>정보 입력</p>\r\n                    <p><input type =\"text\" placeholder=\"이름을 입력해주세요.\" name=\"name\" value={name} onChange={changeName}/><br/>\r\n                    <input type =\"text\" placeholder=\"휴대폰번호를 입력해주세요.\" name=\"phone\" value={phone} onChange={changePhone}/><br/>\r\n                    <button type=\"submit\" className=\"submit_btn\" disabled={disabled}>제출</button></p>\r\n            </form> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}