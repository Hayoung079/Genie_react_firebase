{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Genie\\\\Desktop\\\\reactProject\\\\plus\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { database } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"number\",\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"plus_btn\",\n        onClick: plus,\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"minus_btn\",\n        onClick: minus,\n        children: \"-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n} // getter변수(num), setter함수(setNum)를 포함한 useState선언\n\n\n_c = App;\nconst [num, setNum] = useState(0); // 증가하는 함수\n\nconst plus = () => {\n  setNum(num + 1);\n  console.log(num); // writeCurrentNum(num); // 현재 수 데이터베이스에 쓰기\n}; // 감소하는 함수\n\n\nfunction minus() {\n  if (num !== 0) {\n    num--;\n    console.log(num); // writeCurrentNum(num);\n  }\n} // 데이터베이스에 쓰기\n\n\nfunction writeCurrentNum(num) {\n  database().ref('currentNum').set({\n    currentNum: num\n  });\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Genie/Desktop/reactProject/plus/src/App.js"],"names":["React","useState","database","App","plus","minus","num","setNum","console","log","writeCurrentNum","ref","set","currentNum"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,UAAhC;AAA2C,QAAA,OAAO,EAAEC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AAA4C,QAAA,OAAO,EAAEC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;;;KAZSF,G;AAaT,MAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,CAAD,CAA9B,C,CAEA;;AACA,MAAMG,IAAI,GAAG,MAAM;AACjBG,EAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAFiB,CAGjB;AACD,CAJD,C,CAMA;;;AACA,SAASD,KAAT,GAAiB;AACf,MAAGC,GAAG,KAAK,CAAX,EAAa;AACXA,IAAAA,GAAG;AACHE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAFW,CAGX;AACD;AACF,C,CAED;;;AACA,SAASI,eAAT,CAAyBJ,GAAzB,EAA8B;AAC5BJ,EAAAA,QAAQ,GAAGS,GAAX,CAAe,YAAf,EAA6BC,GAA7B,CAAiC;AAC/BC,IAAAA,UAAU,EAAEP;AADmB,GAAjC;AAGD;;AAGD,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {database} from './firebase';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"number\">0</h1>\n      <div className=\"buttons\">\n        <button type=\"button\" className=\"plus_btn\" onClick={plus}>+1</button>\n        <button type=\"button\" className=\"minus_btn\" onClick={minus}>-1</button>\n      </div>  \n    </div>\n  );\n}\n\n// getter변수(num), setter함수(setNum)를 포함한 useState선언\nconst [num, setNum] = useState(0);\n\n// 증가하는 함수\nconst plus = () => {\n  setNum(num + 1);\n  console.log(num);\n  // writeCurrentNum(num); // 현재 수 데이터베이스에 쓰기\n}\n\n// 감소하는 함수\nfunction minus() {\n  if(num !== 0){\n    num--;\n    console.log(num);\n    // writeCurrentNum(num);\n  }\n}\n\n// 데이터베이스에 쓰기\nfunction writeCurrentNum(num) {\n  database().ref('currentNum').set({\n    currentNum: num\n  });\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}